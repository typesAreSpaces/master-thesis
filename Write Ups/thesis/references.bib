@InProceedings{10.1007/978-3-540-32033-3_33,
  author="Nieuwenhuis, Robert
    and Oliveras, Albert",
  editor="Giesl, J{\"u}rgen",
  title="Proof-Producing Congruence Closure",
  booktitle="Term Rewriting and Applications",
  year="2005",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="453--468",
  abstract="Many applications of congruence closure nowadays require the ability of recovering, among the thousands of input equations, the small subset that caused the equivalence of a given pair of terms. For this purpose, here we introduce an incremental congruence closure algorithm that has an additional {\$}{\backslash}mathit{\{}Explain{\}}{\$}operation.",
  isbn="978-3-540-32033-3"
}

@book{DBLP:books/daglib/0080654,
  author    = {Dirk van Dalen},
  title     = {Logic and structure {(3.} ed.)},
  series    = {Universitext},
  publisher = {Springer},
  year      = {1994},
  isbn      = {978-3-540-57839-0},
  timestamp = {Fri, 29 Apr 2011 18:24:07 +0200},
  biburl    = {https://dblp.org/rec/books/daglib/0080654.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{10.5555/17634,
author = {Schrijver, Alexander},
title = {Theory of Linear and Integer Programming},
year = {1986},
isbn = {0471908541},
publisher = {John Wiley and Sons, Inc.},
address = {USA}
}

@InProceedings{10.1007/978-3-540-39813-4_5,
  author="Nieuwenhuis, Robert
    and Oliveras, Albert",
  editor="Vardi, Moshe Y.
    and Voronkov, Andrei",
  title="Congruence Closure with Integer Offsets",
  booktitle="Logic for Programming, Artificial Intelligence, and Reasoning",
  year="2003",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="78--90",
  abstract="Congruence closure algorithms for deduction in ground equational theories are ubiquitous in many (semi-)decision procedures used for verification and automated deduction. They are also frequently used in practical contexts where some interpreted function symbols are present. In particular, for the verification of pipelined microprocessors, in many cases it suffices to be able to deal with integer offsets, that is, instead of only having ground terms t built over free symbols, all (sub)terms can be of the form t+k for arbitrary integer values k.",
  isbn="978-3-540-39813-4"
}

@article{GALLIER1987233,
  title = "Fast algorithms for testing unsatisfiability of ground horn clauses with equations",
  journal = "Journal of Symbolic Computation",
  volume = "4",
  number = "2",
  pages = "233 - 254",
  year = "1987",
  issn = "0747-7171",
  doi = "https://doi.org/10.1016/S0747-7171(87)80067-6",
  url = "http://www.sciencedirect.com/science/article/pii/S0747717187800676",
  author = "Jean H. Gallier",
  abstract = "This paper presents two fast algorithms for testing the unsatisfiability of a set of ground Horn clauses with or without equational atomic formulae. If the length of the set H of Horn clauses (viewed as the string obtained by concatenating the clauses in H) is n, it is possible to design an algorithm running in time O(n log(n)). These algorithms are obtained by generalising the concept of congruence closure to ground Horn clauses. The basic idea behind these algorithms is that the congruence closure induced by a set of ground Horn clauses can be obtained by interleaving steps in which an equational congruence closure is computed, and steps in which an implicational type of closure is computed."
}

@article{KAPUR2017,
  title="A New Algorithm for Computing (Strongest) Interpolants over Quantifier-Free Theory of Equality over Uninterpreted Symbols", 
  journal = "Manuscript",
  year = "2017",
  author = "Deepak Kapur"
}

@article{DOWLING1984267,
  title = "Linear-time algorithms for testing the satisfiability of propositional horn formulae",
  journal = "The Journal of Logic Programming",
  volume = "1",
  number = "3",
  pages = "267 - 284",
  year = "1984",
  issn = "0743-1066",
  doi = "https://doi.org/10.1016/0743-1066(84)90014-1",
  url = "http://www.sciencedirect.com/science/article/pii/0743106684900141",
  author = "William F. Dowling and Jean H. Gallier",
  abstract = "New algorithms for deciding whether a (propositional) Horn formula is satisfiable are presented. If the Horn formula A contains K distinct propositional letters and if it is assumed that they are exactly P1,…, PK, the two algorithms presented in this paper run in time O(N), where N is the total number of occurrences of literals in A. By representing a Horn proposition as a graph, the satisfiability problem can be formulated as a data flow problem, a certain type of pebbling. The difference between the two algorithms presented here is the strategy used for pebbling the graph. The first algorithm is based on the principle used for finding the set of nonterminals of a context-free grammar from which the empty string can be derived. The second algorithm is a graph traversal and uses a “call-by-need” strategy. This algorithm uses an attribute grammar to translate a propositional Horn formula to its corresponding graph in linear time. Our formulation of the satisfiability problem as a data flow problem appears to be new and suggests the possibility of improving efficiency using parallel processors."
}

@article{10.1145/322217.322228,
  author = {Downey, Peter J. and Sethi, Ravi and Tarjan, Robert Endre},
  title = {Variations on the Common Subexpression Problem},
  year = {1980},
  issue_date = {October 1980},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {27},
  number = {4},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/322217.322228},
  doi = {10.1145/322217.322228},
  journal = {J. ACM},
  month = oct,
  pages = {758–771},
  numpages = {14}
}

@article{10.1145/322186.322198,
  author = {Nelson, Greg and Oppen, Derek C.},
  title = {Fast Decision Procedures Based on Congruence Closure},
  year = {1980},
  issue_date = {April 1980},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {27},
  number = {2},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/322186.322198},
  doi = {10.1145/322186.322198},
  journal = {J. ACM},
  month = apr,
  pages = {356–364},
  numpages = {9}
}

@book{10.5555/1391237,
  author = {Kroening, Daniel and Strichman, Ofer},
  title = {Decision Procedures: An Algorithmic Point of View},
  year = {2008},
  isbn = {3540741046},
  publisher = {Springer Publishing Company, Incorporated},
  edition = {1}
}

@InProceedings{10.1007/978-3-540-24730-2_2,
  author="McMillan, K. L.",
  editor="Jensen, Kurt
    and Podelski, Andreas",
  title="An Interpolating Theorem Prover",
  booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
  year="2004",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="16--30",
  abstract="We present a method of deriving Craig interpolants from proofs in the quantifier-free theory of linear inequality and uninterpreted function symbols, and an interpolating theorem prover based on this method. The prover has been used for predicate refinement in the Blast software model checker, and can also be used directly for model checking infinite-state systems, using interpolation-based image approximation.",
  isbn="978-3-540-24730-2"
}

@article{10.2307/2963594,
  ISSN = {00224812},
  URL = {http://www.jstor.org/stable/2963594},
  author = {William Craig},
  journal = {The Journal of Symbolic Logic},
  number = {3},
  pages = {269--285},
  publisher = {Association for Symbolic Logic},
  title = {Three Uses of the Herbrand-Gentzen Theorem in Relating Model Theory and Proof Theory},
  volume = {22},
  year = {1957}
}

@InProceedings{10.1007/978-3-642-02959-2_17,
  author="Kov{\'a}cs, Laura
    and Voronkov, Andrei",
  editor="Schmidt, Renate A.",
  title="Interpolation and Symbol Elimination",
  booktitle="Automated Deduction -- CADE-22",
  year="2009",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="199--213",
  abstract="We prove several results related to local proofs, interpolation and superposition calculus and discuss their use in predicate abstraction and invariant generation. Our proofs and results suggest that symbol-eliminating inferences may be an interesting alternative to interpolation.",
  isbn="978-3-642-02959-2"
}

@InProceedings{10.1007/11532231_26,
  author="Yorsh, Greta
    and Musuvathi, Madanlal",
  editor="Nieuwenhuis, Robert",
  title="A Combination Method for Generating Interpolants",
  booktitle="Automated Deduction -- CADE-20",
  year="2005",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="353--368",
  abstract="We present a combination method for generating interpolants for a class of first-order theories. Using interpolant-generation procedures for individual theories as black-boxes, our method modularly generates interpolants for the combined theory. Our combination method applies for a broad class of first-order theories, which we characterize as equality-interpolating Nelson-Oppen theories. This class includes many useful theories such as the quantifier-free theories of uninterpreted functions, linear inequalities over reals, and Lisp structures. The combination method can be implemented within existing Nelson-Oppen-style decision procedures (such as Simplify, Verifun, ICS, CVC-Lite, and Zap).",
  isbn="978-3-540-31864-4"
}

@InProceedings{10.1007/978-3-642-36742-7_9,
  author="Christ, J{\"u}rgen
    and Hoenicke, Jochen
    and Nutz, Alexander",
  editor="Piterman, Nir
    and Smolka, Scott A.",
  title="Proof Tree Preserving Interpolation",
  booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
  year="2013",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="124--138",
  abstract="Craig interpolation in SMT is difficult because, e. g., theory combination and integer cuts introduce mixed literals, i. e., literals containing local symbols from both input formulae. In this paper, we present a scheme to compute Craig interpolants in the presence of mixed literals. Contrary to existing approaches, this scheme neither limits the inferences done by the SMT solver, nor does it transform the proof tree before extracting interpolants. Our scheme works for the combination of uninterpreted functions and linear arithmetic but is extendable to other theories. The scheme is implemented in the interpolating SMT solver SMTInterpol.",
  isbn="978-3-642-36742-7"
}

@InProceedings{mcmillan2011interpolants,
  author = {McMillan, Kenneth},
  title = {Interpolants from Z3 proofs},
  booktitle = {Formal Methods in Computer-Aided Design},
  year = {2011},
  month = {October},
  abstract = {Interpolating provers have a number of applications in formal verification, including abstraction refinement and invariant generation. It has proved difficult, however, to construct efficient interpolating provers for rich theories. We consider the problem of deriving interpolants from proofs generated by the highly efficient SMT solver Z3 in the quantified theory of arrays, uninterpreted function symbols and linear integer arithmetic (AUFLIA) a theory that is commonly used in program verification. We do not directly interpolate the proofs from Z3. Rather, we divide them into small lemmas that can be handled by a secondary interpolating prover for a restricted theory. We show experimentally that the overhead of this secondary prover is negligible.  Moreover, the efficiency of Z3 makes it possible to handle problems that are beyond the reach of existing interpolating provers, as we demonstrate using benchmarks derived from bounded verification of sequential and concurrent programs.},
  url = {https://www.microsoft.com/en-us/research/publication/interpolants-from-z3-proofs/},
  edition = {Formal Methods in Computer-Aided Design},
}

@article{10.1145/364099.364331,
  author = {Galler, Bernard A. and Fisher, Michael J.},
  title = {An Improved Equivalence Algorithm},
  year = {1964},
  issue_date = {May 1964},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {7},
  number = {5},
  issn = {0001-0782},
  url = {https://doi.org/10.1145/364099.364331},
  doi = {10.1145/364099.364331},
  journal = {Commun. ACM},
  month = may,
  pages = {301–303},
  numpages = {3}
}

@book{10.5555/1642730,
  author = {Mendelson, Elliott},
  title = {Introduction to Mathematical Logic},
  year = {2009},
  isbn = {1584888768},
  publisher = {Chapman and Hall-CRC},
  edition = {5th}
}

@InProceedings{10.1007/978-3-540-78800-3_24,
  author="de Moura, Leonardo
    and Bj{\o}rner, Nikolaj",
  editor="Ramakrishnan, C. R.
    and Rehof, Jakob",
  title="Z3: An Efficient SMT Solver",
  booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
  year="2008",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="337--340",
  abstract="Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.",
  isbn="978-3-540-78800-3"
}

@inproceedings{10.5555/2032305.2032319,
  author = {Barrett, Clark and Conway, Christopher L. and Deters, Morgan and Hadarean, Liana and Jovanoviundefined, Dejan and King, Tim and Reynolds, Andrew and Tinelli, Cesare},
  title = {CVC4},
  year = {2011},
  isbn = {9783642221095},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification},
  pages = {171–177},
  numpages = {7},
  location = {Snowbird, UT},
  series = {CAV’11}
}

@InProceedings{10.1007/978-3-642-02959-2_12,
  author="Bouton, Thomas
    and Caminha B. de Oliveira, Diego
    and D{\'e}harbe, David
    and Fontaine, Pascal",
  editor="Schmidt, Renate A.",
  title="veriT: An Open, Trustable and Efficient SMT-Solver",
  booktitle="Automated Deduction -- CADE-22",
  year="2009",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="151--156",
  abstract="This article describes the first public version of the satisfiability modulo theory (SMT) solver veriT. It is open-source, proof-producing, and complete for quantifier-free formulas with uninterpreted functions and difference logic on real numbers and integers.",
  isbn="978-3-642-02959-2"
}

@article{articleProofsInSMT,
  author = {Barrett, Clark and de Moura, Leonardo and Fontaine, Pascal},
  year = {2014},
  month = {07},
  pages = {},
  title = {Proofs in satisfiability modulo theories}
}

@inproceedings{inproceedingsproofsrefutationsz3,
  author = {de Moura, Leonardo and Bjørner, Nikolaj},
  year = {2008},
  month = {01},
  pages = {},
  title = {Proofs and Refutations, and Z3},
  volume = {418},
  journal = {CEUR Workshop Proceedings}
}

@InProceedings{10.1007/978-3-540-69738-1_25,
  author="Rybalchenko, Andrey
    and Sofronie-Stokkermans, Viorica",
  editor="Cook, Byron
    and Podelski, Andreas",
  title="Constraint Solving for Interpolation",
  booktitle="Verification, Model Checking, and Abstract Interpretation",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="346--362",
  abstract="Interpolation is an important component of recent methods for program verification. It provides a natural and effective means for computing separation between the sets of `good' and `bad' states. The existing algorithms for interpolant generation are proof-based: They require explicit construction of proofs, from which interpolants can be computed. Construction of such proofs is a difficult task. We propose an algorithm for the generation of interpolants for the combined theory of linear arithmetic and uninterpreted function symbols that does not require a priori constructed proofs to derive interpolants. It uses a reduction of the problem to constraint solving in linear arithmetic, which allows application of existing highly optimized Linear Programming solvers in black-box fashion. We provide experimental evidence of the practical applicability of our algorithm.",
  isbn="978-3-540-69738-1"
}

@InProceedings{10.1007/11814771_21,
  author="Sofronie-Stokkermans, Viorica",
  editor="Furbach, Ulrich
    and Shankar, Natarajan",
  title="Interpolation in Local Theory Extensions",
  booktitle="Automated Reasoning",
  year="2006",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="235--250",
  abstract="In this paper we study interpolation in local extensions of a base theory. We identify situations in which it is possible to obtain interpolants in a hierarchical manner, by using a prover and a procedure for generating interpolants in the base theory as black-boxes. We present several examples of theory extensions in which interpolants can be computed this way, and discuss applications in verification, knowledge representation, and modular reasoning in combinations of local theories.",
  isbn="978-3-540-37188-5"
}

@InProceedings{10.1007/3-540-58179-0_44,
  author="Burch, Jerry R.
    and Dill, David L.",
  editor="Dill, David L.",
  title="Automatic verification of pipelined microprocessor control",
  booktitle="Computer Aided Verification",
  year="1994",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="68--80",
  abstract="We describe a technique for verifying the control logic of pipelined microprocessors. It handles more complicated designs, and requires less human intervention, than existing methods. The technique automatically compares a pipelined implementation to an architectural description. The CPU time needed for verification is independent of the data path width, the register file size, and the number of ALU operations. Debugging information is automatically produced for incorrect processor designs. Much of the power of the method results from an efficient validity checker for a logic of uninterpreted functions with equality. Empirical results include the verification of a pipelined implementation of a subset of the DLX architecture.",
  isbn="978-3-540-48469-1"
}

@InProceedings{10.1007/978-3-642-00768-2_34,
  author="Fuchs, Alexander
    and Goel, Amit
    and Grundy, Jim
    and Krsti{\'{c}}, Sava
    and Tinelli, Cesare",
  editor="Kowalewski, Stefan
    and Philippou, Anna",
  title="Ground Interpolation for the Theory of Equality",
  booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
  year="2009",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="413--427",
  abstract="Given a theory {\$}{\backslash}mathcal{\{}T{\}}{\$}and two formulas A and B jointly unsatisfiable in {\$}{\backslash}mathcal{\{}T{\}}{\$}, a theory interpolant of A and B is a formula I such that (i) its non-theory symbols are shared by A and B, (ii) it is entailed by A in {\$}{\backslash}mathcal{\{}T{\}}{\$}, and (iii) it is unsatisfiable with B in {\$}{\backslash}mathcal{\{}T{\}}{\$}. Theory interpolants are used in model checking to accelerate the computation of reachability relations. We present a novel method for computing ground interpolants for ground formulas in the theory of equality. Our algorithm computes interpolants from colored congruence graphs representing derivations in the theory of equality. These graphs can be produced by conventional congruence closure algorithms in a straightforward manner. By working with graphs, rather than at the level of individual proof steps, we are able to derive interpolants that are pleasingly simple (conjunctions of Horn clauses) and smaller than those generated by other tools.",
  isbn="978-3-642-00768-2"
}

@InProceedings{10.1007/978-3-642-31612-8_24,
  author="Weissenbacher, Georg",
  editor="Cimatti, Alessandro
    and Sebastiani, Roberto",
  title="Interpolant Strength Revisited",
  booktitle="Theory and Applications of Satisfiability Testing -- SAT 2012",
  year="2012",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="312--326",
  abstract="Craig's interpolation theorem has numerous applications in model checking, automated reasoning, and synthesis. There is a variety of interpolation systems which derive interpolants from refutation proofs; these systems are ad-hoc and rigid in the sense that they provide exactly one interpolant for a given proof. In previous work, we introduced a parametrised interpolation system which subsumes existing interpolation methods for propositional resolution proofs and enables the systematic variation of the logical strength and the elimination of non-essential variables in interpolants. In this paper, we generalise this system to propositional hyper-resolution proofs and discuss its application to proofs generated by contemporary SAT solvers. Finally, we show that, when applied to local (or split) proofs, our extension generalises two existing interpolation systems for first-order logic and relates them in logical strength.",
  isbn="978-3-642-31612-8"
}

@book{DBLP:books/daglib/0076838,
  author    = {Herbert B. Enderton},
  title     = {A mathematical introduction to logic},
  publisher = {Academic Press},
  year      = {1972},
  isbn      = {978-0-12-238450-9},
  timestamp = {Fri, 29 Apr 2011 18:24:06 +0200},
  biburl    = {https://dblp.org/rec/books/daglib/0076838.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
