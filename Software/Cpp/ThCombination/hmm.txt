./thcombination
unit-resolution: (let ((a!1 (<= (+ (f y1) (* (- 1) (f x1))) 0)))
  (or (not (= (f y1) (f x1))) a!1)), (let ((a!1 (<= (+ (f y1) (* (- 1) (f x1))) 0)))
  (not a!1)), (= (f y1) (f x1)),  |- false
th-lemma:  |- (let ((a!1 (<= (+ (f y1) (* (- 1) (f x1))) 0)))
  (or (not (= (f y1) (f x1))) a!1))
asserted:  |- (and (= x2 (g b)) (= y2 (g b)) (<= x1 y1) (< x3 y3))
asserted:  |- (and (= (+ (f x1) x2) x3) (= y3 (+ (f y1) y2)) (<= y1 x1))
asserted:  |- (and (= x2 (g b)) (= y2 (g b)) (<= x1 y1) (< x3 y3))
asserted:  |- (and (= (+ (f x1) x2) x3) (= y3 (+ (f y1) y2)) (<= y1 x1))
asserted:  |- (and (= x2 (g b)) (= y2 (g b)) (<= x1 y1) (< x3 y3))
mysterious step: |- (let ((a!1 (<= (+ (f y1) (* (- 1) (f x1))) 0)))
  (not a!1))
unit-resolution: (let ((a!1 (not (<= (+ x1 (* (- 1) y1)) 0)))
      (a!2 (not (>= (+ x1 (* (- 1) y1)) 0))))
  (or (= x1 y1) a!1 a!2)), (>= (+ x1 (* (- 1) y1)) 0), (<= (+ x1 (* (- 1) y1)) 0),  |- (= x1 y1)
th-lemma:  |- (let ((a!1 (not (<= (+ x1 (* (- 1) y1)) 0)))
      (a!2 (not (>= (+ x1 (* (- 1) y1)) 0))))
  (or (= x1 y1) a!1 a!2))
asserted:  |- (and (= (+ (f x1) x2) x3) (= y3 (+ (f y1) y2)) (<= y1 x1))
mysterious step: |- (>= (+ x1 (* (- 1) y1)) 0)
asserted:  |- (and (= x2 (g b)) (= y2 (g b)) (<= x1 y1) (< x3 y3))
mysterious step: |- (<= (+ x1 (* (- 1) y1)) 0)
mysterious step: |- (= (f y1) (f x1))
