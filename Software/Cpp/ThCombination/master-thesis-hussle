let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/master-thesis/Software/Cpp/ThCombination
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +24 include/Purifier.h
badd +5 src/Purifier.cpp
badd +428 src/ThCombInterpolator.cpp
badd +1 include/ThCombInterpolator.h
badd +31 src/main.cpp
badd +91 src/HornClauses.cpp
badd +73 tests/basic_test.cpp
badd +44 include/DisjEqsPropagator.h
badd +20 tests/disj_eqs_propagator_test.cpp
badd +244 src/ProofFactory.cpp
badd +82 include/ProofFactory.h
badd +19 src/DisjEqsPropagator.cpp
badd +193 src/CDCL_T.cpp
badd +46 tests/cdcl_t_test.cpp
badd +4 tests/res_proof_test.cpp
badd +65 include/CDCL_T.h
badd +2430 /usr/include/z3++.h
badd +49 include/PicoSATProofFactory.h
badd +21 src/PicoSATProofFactory.cpp
badd +2 file.cnf
badd +1 include/ThCombInterpolatorWithExpressions.h
badd +108 ~/Documents/GithubProjects/master-thesis/Software/Cpp/EUFInterpolant/tests/current_progress.cpp
badd +6 ~/Documents/GithubProjects/master-thesis/Software/Cpp/OctagonsInterpolant/tests/current_progress.cpp
badd +1 ~/Documents/GithubProjects/master-thesis/Software/Cpp/OctagonsInterpolant/tests/test_octagon_constructor.cpp
badd +1 ~/Documents/GithubProjects/master-thesis/Software/Cpp/OctagonsInterpolant/tests/test_octagon_parser.cpp
badd +5 include/Theories.h
badd +5 src/EUFInterpolant.cpp
badd +31 include/EUFInterpolant.h
badd +29 include/Input.h
badd +12 src/OctagonInterpolant.cpp
badd +107 src/OctagonParser.cpp
badd +17 include/OctagonTerm.h
badd +58 src/OctagonTerm.cpp
badd +12 ~/Documents/Programming/Cpp/tactics_example.cpp
argglobal
%argdel
edit include/ThCombInterpolator.h
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 8 + 39) / 79)
exe 'vert 1resize ' . ((&columns * 125 + 188) / 376)
exe '2resize ' . ((&lines * 68 + 39) / 79)
exe 'vert 2resize ' . ((&columns * 125 + 188) / 376)
exe '3resize ' . ((&lines * 18 + 39) / 79)
exe 'vert 3resize ' . ((&columns * 125 + 188) / 376)
exe '4resize ' . ((&lines * 58 + 39) / 79)
exe 'vert 4resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 5resize ' . ((&columns * 124 + 188) / 376)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 11 - ((2 * winheight(0) + 4) / 8)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 05|
wincmd w
argglobal
if bufexists("src/ThCombInterpolator.cpp") | buffer src/ThCombInterpolator.cpp | else | edit src/ThCombInterpolator.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 580 - ((31 * winheight(0) + 34) / 68)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
580
normal! 05|
wincmd w
argglobal
if bufexists("src/ThCombInterpolator.cpp") | buffer src/ThCombInterpolator.cpp | else | edit src/ThCombInterpolator.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 142 - ((5 * winheight(0) + 9) / 18)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
142
normal! 017|
wincmd w
argglobal
if bufexists("src/ThCombInterpolator.cpp") | buffer src/ThCombInterpolator.cpp | else | edit src/ThCombInterpolator.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 421 - ((14 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
421
normal! 03|
wincmd w
argglobal
if bufexists("src/OctagonParser.cpp") | buffer src/OctagonParser.cpp | else | edit src/OctagonParser.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 110 - ((7 * winheight(0) + 38) / 77)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
110
normal! 07|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 8 + 39) / 79)
exe 'vert 1resize ' . ((&columns * 125 + 188) / 376)
exe '2resize ' . ((&lines * 68 + 39) / 79)
exe 'vert 2resize ' . ((&columns * 125 + 188) / 376)
exe '3resize ' . ((&lines * 18 + 39) / 79)
exe 'vert 3resize ' . ((&columns * 125 + 188) / 376)
exe '4resize ' . ((&lines * 58 + 39) / 79)
exe 'vert 4resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 5resize ' . ((&columns * 124 + 188) / 376)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
