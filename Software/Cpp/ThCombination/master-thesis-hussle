let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/master-thesis/Software/Cpp/ThCombination
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +51 include/Purifier.h
badd +236 src/Purifier.cpp
badd +120 src/ThCombInterpolator.cpp
badd +43 include/ThCombInterpolator.h
badd +31 src/main.cpp
badd +91 src/HornClauses.cpp
badd +54 tests/basic_test.cpp
badd +44 include/DisjEqsPropagator.h
badd +20 tests/disj_eqs_propagator_test.cpp
badd +1 src/ProofFactory.cpp
badd +67 include/ProofFactory.h
badd +0 src/DisjEqsPropagator.cpp
badd +6 src/CDCL_T.cpp
badd +0 tests/cdcl_t_test.cpp
badd +4 tests/res_proof_test.cpp
argglobal
%argdel
edit include/ThCombInterpolator.h
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 1resize ' . ((&columns * 78 + 157) / 315)
exe '2resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 2resize ' . ((&columns * 78 + 157) / 315)
exe '3resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 3resize ' . ((&columns * 78 + 157) / 315)
exe '4resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 4resize ' . ((&columns * 157 + 157) / 315)
exe '5resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 5resize ' . ((&columns * 78 + 157) / 315)
exe '6resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 6resize ' . ((&columns * 78 + 157) / 315)
exe '7resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 7resize ' . ((&columns * 78 + 157) / 315)
exe '8resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 8resize ' . ((&columns * 78 + 157) / 315)
exe '9resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 9resize ' . ((&columns * 78 + 157) / 315)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 8 - ((5 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
8
normal! 025|
wincmd w
argglobal
if bufexists("include/DisjEqsPropagator.h") | buffer include/DisjEqsPropagator.h | else | edit include/DisjEqsPropagator.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 44 - ((13 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
44
normal! 013|
wincmd w
argglobal
if bufexists("src/DisjEqsPropagator.cpp") | buffer src/DisjEqsPropagator.cpp | else | edit src/DisjEqsPropagator.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 81 - ((15 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
81
normal! 035|
wincmd w
argglobal
if bufexists("src/ThCombInterpolator.cpp") | buffer src/ThCombInterpolator.cpp | else | edit src/ThCombInterpolator.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 112 - ((26 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
112
normal! 05|
wincmd w
argglobal
if bufexists("src/CDCL_T.cpp") | buffer src/CDCL_T.cpp | else | edit src/CDCL_T.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
if bufexists("tests/cdcl_t_test.cpp") | buffer tests/cdcl_t_test.cpp | else | edit tests/cdcl_t_test.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 42 - ((25 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
42
normal! 0
wincmd w
argglobal
if bufexists("include/ProofFactory.h") | buffer include/ProofFactory.h | else | edit include/ProofFactory.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 6 - ((5 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
6
normal! 018|
wincmd w
argglobal
if bufexists("src/ProofFactory.cpp") | buffer src/ProofFactory.cpp | else | edit src/ProofFactory.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 225 - ((11 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
225
normal! 04|
wincmd w
argglobal
if bufexists("tests/basic_test.cpp") | buffer tests/basic_test.cpp | else | edit tests/basic_test.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 46 - ((12 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
46
normal! 0
wincmd w
8wincmd w
exe '1resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 1resize ' . ((&columns * 78 + 157) / 315)
exe '2resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 2resize ' . ((&columns * 78 + 157) / 315)
exe '3resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 3resize ' . ((&columns * 78 + 157) / 315)
exe '4resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 4resize ' . ((&columns * 157 + 157) / 315)
exe '5resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 5resize ' . ((&columns * 78 + 157) / 315)
exe '6resize ' . ((&lines * 33 + 34) / 69)
exe 'vert 6resize ' . ((&columns * 78 + 157) / 315)
exe '7resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 7resize ' . ((&columns * 78 + 157) / 315)
exe '8resize ' . ((&lines * 22 + 34) / 69)
exe 'vert 8resize ' . ((&columns * 78 + 157) / 315)
exe '9resize ' . ((&lines * 21 + 34) / 69)
exe 'vert 9resize ' . ((&columns * 78 + 157) / 315)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
