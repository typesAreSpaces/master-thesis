./main
Original input formula:
(let ((a!1 (distinct (f (- (f x1) (f x2))) (f x3))))
  (and a!1 (<= x1 x2) (<= (+ x2 x3) x1) (<= 0.0 x3) (<= (f x1) (f x2))))
Unsat

Traversing the proof:
monotonicity (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

monotonicity (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

monotonicity (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

monotonicity (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

trans (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

trans (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2)) 186

monotonicity (= (f x1) (f x2)) 341

monotonicity (= (f x1) (f x2)) 341

symm (= (f x2) (f x1)) 253

symm (= (f x2) (f x1)) 253

rewrite (= (<= x1 x2) (<= (+ x1 (* (- 1.0) x2)) 0.0)) 69

rewrite (= (<= 0.0 x3) (>= x3 0.0)) 88

rewrite (= (<= (+ x2 x3) x1) (<= (+ x2 x3 (* (- 1.0) x1)) 0.0)) 178

monotonicity (= (<= (+ x2 x3 (* (- 1.0) x1)) 0.0) (<= (+ (* (- 1.0) x1) x2 x3) 0.0)) 214

monotonicity (= (<= (+ x2 x3 (* (- 1.0) x1)) 0.0) (<= (+ (* (- 1.0) x1) x2 x3) 0.0)) 214

rewrite (= (<= (+ (* (- 1.0) x1) x2 x3) 0.0)
   (>= (+ x1 (* (- 1.0) x2) (* (- 1.0) x3)) 0.0)) 216

trans (= (<= (+ x2 x3 (* (- 1.0) x1)) 0.0)
   (>= (+ x1 (* (- 1.0) x2) (* (- 1.0) x3)) 0.0)) 218

trans (= (<= (+ x2 x3 (* (- 1.0) x1)) 0.0)
   (>= (+ x1 (* (- 1.0) x2) (* (- 1.0) x3)) 0.0)) 218

unit-resolution (= x1 x2) 287

rewrite (let ((a!1 (<= (+ (f x1) (* (- 1.0) (f x2))) 0.0)))
  (= (<= (f x1) (f x2)) a!1)) 183

monotonicity (let ((a!1 (<= (+ (f x1) (* (- 1.0) (f x2))) 0.0))
      (a!2 (<= (+ (* (- 1.0) (f x2)) (f x1)) 0.0)))
  (= a!1 a!2)) 222

monotonicity (let ((a!1 (<= (+ (f x1) (* (- 1.0) (f x2))) 0.0))
      (a!2 (<= (+ (* (- 1.0) (f x2)) (f x1)) 0.0)))
  (= a!1 a!2)) 222

rewrite (let ((a!1 (<= (+ (* (- 1.0) (f x2)) (f x1)) 0.0))
      (a!2 (>= (+ (f x2) (* (- 1.0) (f x1))) 0.0)))
  (= a!1 a!2)) 224

trans (let ((a!1 (<= (+ (f x1) (* (- 1.0) (f x2))) 0.0))
      (a!2 (>= (+ (f x2) (* (- 1.0) (f x1))) 0.0)))
  (= a!1 a!2)) 226

trans (let ((a!1 (<= (+ (f x1) (* (- 1.0) (f x2))) 0.0))
      (a!2 (>= (+ (f x2) (* (- 1.0) (f x1))) 0.0)))
  (= a!1 a!2)) 226

monotonicity (let ((a!1 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= (f x3) a!1)) 258

monotonicity (let ((a!1 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= (f x3) a!1)) 258

