g++ -g -c -o obj/main.o  -I./include/ -std=c++11 src/main.cpp -Wall
g++ -g -o main obj/Purifier.o obj/NelsonOppen.o obj/main.o /home/jose/Documents/GithubProjects/z3/build/libz3.so -lpthread -Wall
./main
Original input formula:
(let ((a!1 (distinct (f (- (f x1) (f x2))) (f x3))))
  (and a!1 (<= x1 x2) (<= (+ x2 x3) x1) (<= 0.0 x3) (<= (f x1) (f x2))))
Unsat

Traversing the proof:
Terms collected:
0. (= __oct_4 __oct_1)
1. (= (f __oct_4) (f __oct_1))
2. (= (+ __euf_3 (* (- 1.0) __euf_2)) __oct_4)
3. (= (f x1) __euf_3)
4. (= __euf_3 (f x1))
5. (= (f x2) __euf_2)
6. (= __euf_2 (f x2))
7. (= (* (- 1.0) __euf_2) (* (- 1.0) (f x2)))
8. (= (+ __euf_3 (* (- 1.0) __euf_2)) (+ (f x1) (* (- 1.0) (f x2))))
9. (= (+ (f x1) (* (- 1.0) (f x2))) __oct_1)
10. (= __oct_1 (+ (f x1) (* (- 1.0) (f x2))))
11. (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2))))))
  (= (f __oct_1) a!1))
12. (let ((a!1 (f (+ (f x1) (* (- 1.0) (f x2)))))
      (a!2 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= a!1 a!2))
13. (= (f x1) (f x2))
14. (= x1 x2)
15. (let ((a!1 (f (+ (* (- 1.0) (f x2)) (f x1)))))
  (= (f x3) a!1))
