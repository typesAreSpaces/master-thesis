let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/master-thesis/Software/Cpp/OctagonsInterpolantZ3
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +19 include/Octagon.h
badd +1 src/Octagon.cpp
badd +2 tests/current_progress.cpp
badd +22 tests/test_octagon_constructor.cpp
badd +29 Makefile
badd +1 tests/test_octagon_constructor
badd +22 include/Bound.h
badd +6 src/Bound.cpp
badd +19 tests/test_bound_constructor.cpp
badd +30 include/OctagonParser.h
badd +154 src/OctagonParser.cpp
badd +23 tests/test_octagon_parser.cpp
badd +10 include/Bounds.h
badd +11 include/VarPositions.h
badd +1 src/VarPositions.cpp
badd +16 src/Bounds.cpp
badd +15 include/OctagonInterpolant.h
badd +11 src/OCTInterpolant.cpp
badd +11 src/OctagonInterpolant.cpp
badd +5 include/OctagonInterpolantWithExpressions.h
badd +9 include/OctagonInterpolantWithUncomSymbols.h
badd +1 src/OctagonInterpolantWithExpressions.cpp
badd +5 src/OctagonInterpolantWithUncomSymbols.cpp
badd +1 obj/VarPositions.o
badd +16 include/Rename.h
argglobal
%argdel
edit include/OctagonInterpolant.h
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 1resize ' . ((&columns * 105 + 157) / 315)
exe '2resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 2resize ' . ((&columns * 105 + 157) / 315)
exe 'vert 3resize ' . ((&columns * 104 + 157) / 315)
exe '4resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 4resize ' . ((&columns * 104 + 157) / 315)
exe '5resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 5resize ' . ((&columns * 104 + 157) / 315)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 15 - ((7 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 0
wincmd w
argglobal
if bufexists("include/Bounds.h") | buffer include/Bounds.h | else | edit include/Bounds.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 15 - ((14 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 028|
wincmd w
argglobal
if bufexists("src/OctagonInterpolant.cpp") | buffer src/OctagonInterpolant.cpp | else | edit src/OctagonInterpolant.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 176 - ((34 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
176
normal! 03|
wincmd w
argglobal
if bufexists("tests/test_octagon_parser.cpp") | buffer tests/test_octagon_parser.cpp | else | edit tests/test_octagon_parser.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 20 - ((18 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
20
normal! 07|
wincmd w
argglobal
if bufexists("src/Bounds.cpp") | buffer src/Bounds.cpp | else | edit src/Bounds.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 24 - ((1 * winheight(0) + 13) / 27)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
24
normal! 0
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 1resize ' . ((&columns * 105 + 157) / 315)
exe '2resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 2resize ' . ((&columns * 105 + 157) / 315)
exe 'vert 3resize ' . ((&columns * 104 + 157) / 315)
exe '4resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 4resize ' . ((&columns * 104 + 157) / 315)
exe '5resize ' . ((&lines * 27 + 28) / 57)
exe 'vert 5resize ' . ((&columns * 104 + 157) / 315)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
