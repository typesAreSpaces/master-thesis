g++ -g -c -o tests/TestCongruenceClosureExplain.o -I./src -I./include -std=c++11 -Wall tests/TestCongruenceClosureExplain.cpp
g++ -g -c -o ./tests/qf_uf_test.o -I./src -I./include -std=c++11 -Wall ./tests/qf_uf_test.cpp
g++ -g -o tests/qf_uf_test  ./obj/CongruenceClosure.o  ./obj/CongruenceClosureDST.o  ./obj/CongruenceClosureExplain.o  ./obj/CongruenceClosureNO.o  ./obj/CurryNode.o  ./obj/EUFInterpolant.o  ./obj/FactoryCurryNodes.o  ./obj/HornClause.o  ./obj/HornClauses.o  ./obj/Hornsat.o  ./obj/Input.o  ./obj/Match.o  ./obj/Rename.o  ./obj/UnionFind.o  ./obj/UnionFindExplain.o  ./obj/Util.o  ./obj/Z3Subterms.o /home/jose/Documents/GithubProjects/z3__/build/libz3.so  tests/TestCongruenceClosureExplain.o ./tests/qf_uf_test.o -lpthread
./tests/qf_uf_test.sh
Starting consistency test
To check that grn_MR and grn are equivalent: They are.
Processing file:  smt1300175744189082250.smt2
Starting consistency test
Processing file:  smt1468783596909311386.smt2
Starting consistency test
To check that grn_SR and rd1 are equivalent: They are.
Processing file:  smt2061505268723161891.smt2
Starting consistency test
Processing file:  smt2080745738819601301.smt2
Starting consistency test
Processing file:  smt2325451563592377472.smt2
Starting consistency test
To check that nf and flash are equivalent: They are.
Processing file:  smt249825283571301584.smt2
Starting consistency test
To check that mode and cir are equivalent: They are.
Processing file:  smt2598599073465845145.smt2
Starting consistency test
Processing file:  smt2831655880469397696.smt2
Starting consistency test
To check that mode and cir are equivalent: They are.
Processing file:  smt2970577543992530805.smt2
Starting consistency test
Processing file:  smt3166111930664231918.smt2
Starting consistency test
Processing file:  smt3232867547761696161.smt2
Starting consistency test
Processing file:  smt3248576982810563470.smt2
Starting consistency test
Processing file:  smt3508124013603727984.smt2
Starting consistency test
To check that reg and input are equivalent: They are.
Processing file:  smt3534838651727683253.smt2
Starting consistency test
Processing file:  smt3809952321495040629.smt2
Starting consistency test
Processing file:  smt3910673230463462036.smt2
Starting consistency test
Processing file:  smt4027072204816894856.smt2
Starting consistency test
To check that grn_MR and grn are equivalent: They are.
Processing file:  smt4057580428149921510.smt2
Starting consistency test
Processing file:  smt4241633917533372498.smt2
Starting consistency test
To check that nf and flash are equivalent: They are.
Processing file:  smt4458073420585573738.smt2
Starting consistency test
Processing file:  smt4480564921249140261.smt2
Starting consistency test
To check that reg and input are equivalent: They are.
Processing file:  smt5144869669709662262.smt2
Starting consistency test
To check that grn_MR and grn are equivalent: They are.
Processing file:  smt5490086717622526120.smt2
Starting consistency test
To check that grn_MR and grn are equivalent: They are.
Processing file:  smt5801285361354912971.smt2
Starting consistency test
To check that grn_SR and rd1 are equivalent: They are.
Processing file:  smt5832055835117075398.smt2
Starting consistency test
To check that flash and nf0 are equivalent: They are.
Processing file:  smt6109211130895037835.smt2
Starting consistency test
Processing file:  smt6377531776677660648.smt2
Starting consistency test
To check that grn_MR and grn are equivalent: They are.
Processing file:  smt6739662804326223632.smt2
Starting consistency test
To check that grn_SR and rd1 are equivalent: They are.
Processing file:  smt7452810379672948208.smt2
Starting consistency test
To check that mode and cir are equivalent: They are.
Processing file:  smt7632939434921259240.smt2
Starting consistency test
Processing file:  smt7665342989239969743.smt2
Starting consistency test
Processing file:  smt834303034702425531.smt2
Starting consistency test
Processing file:  smt862177804180920815.smt2
Starting consistency test
Processing file:  smt8855268942650190404.smt2
Starting consistency test
To check that y$dve_invalid and (not y$13) are equivalent: They are.
Processing file:  QF_UF_adding.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$13) are equivalent: They are.
Processing file:  QF_UF_adding.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$13) are equivalent: They are.
Processing file:  QF_UF_adding.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$13) are equivalent: They are.
Processing file:  QF_UF_adding.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$13) are equivalent: They are.
Processing file:  QF_UF_adding.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Q_a1 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_adding.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$31) are equivalent: They are.
Processing file:  QF_UF_anderson.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$31) are equivalent: They are.
Processing file:  QF_UF_anderson.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$41) are equivalent: They are.
Processing file:  QF_UF_anderson.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_anderson.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$61) are equivalent: They are.
Processing file:  QF_UF_anderson.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$61) are equivalent: They are.
Processing file:  QF_UF_anderson.7.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.7.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$71) are equivalent: They are.
Processing file:  QF_UF_anderson.8.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_anderson.8.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$prop0_op and (not y$36) are equivalent: They are.
Processing file:  QF_UF_AR_ab_cti_max.smt2
Starting consistency test
To check that y$58 and (not (= y$a y$b)) are equivalent: They are.
Processing file:  QF_UF_AR_ab_fp_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$75) are equivalent: They are.
Processing file:  QF_UF_at.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$75) are equivalent: They are.
Processing file:  QF_UF_at.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$99) are equivalent: They are.
Processing file:  QF_UF_at.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$123) are equivalent: They are.
Processing file:  QF_UF_at.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$123) are equivalent: They are.
Processing file:  QF_UF_at.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$123) are equivalent: They are.
Processing file:  QF_UF_at.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$147) are equivalent: They are.
Processing file:  QF_UF_at.7.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_at.7.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$31) are equivalent: They are.
Processing file:  QF_UF_bakery.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$41) are equivalent: They are.
Processing file:  QF_UF_bakery.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$41) are equivalent: They are.
Processing file:  QF_UF_bakery.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$41) are equivalent: They are.
Processing file:  QF_UF_bakery.7.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.7.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_bakery.8.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_CS_P_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bakery.8.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$2 and (= y$n2s3 y$a) are equivalent: They are.
Processing file:  QF_UF_bit-vector_ab_br_max.smt2
Starting consistency test
To check that y$w$3_op and (Concat_32_3_29 y$a y$n0s29) are equivalent: They are.
Processing file:  QF_UF_bit-vector_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$7) are equivalent: They are.
Processing file:  QF_UF_blocks.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_done and (not y$1) are equivalent: They are.
Processing file:  QF_UF_blocks.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$7) are equivalent: They are.
Processing file:  QF_UF_blocks.3.prop1_ab_fp_max.smt2
Starting consistency test
To check that y$a_done and (not y$1) are equivalent: They are.
Processing file:  QF_UF_blocks.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$7) are equivalent: They are.
Processing file:  QF_UF_blocks.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$41) are equivalent: They are.
Processing file:  QF_UF_bridge.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_free and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bridge.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$57) are equivalent: They are.
Processing file:  QF_UF_bridge.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_free and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bridge.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$73) are equivalent: They are.
Processing file:  QF_UF_bridge.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_free and (not y$1) are equivalent: They are.
Processing file:  QF_UF_bridge.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_brp.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_check_Consumer and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.1.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.2.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.3.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.3.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.3.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.4.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.4.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.4.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.4.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.5.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.6.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$53) are equivalent: They are.
Processing file:  QF_UF_brp2.6.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_BAD_K and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp2.6.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_brp.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_check_Consumer and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_brp.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_check_Consumer and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_brp.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_check_Consumer and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_brp.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_check_Consumer and (not y$1) are equivalent: They are.
Processing file:  QF_UF_brp.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$8 and (= y$impl_PC_valid y$prop) are equivalent: They are.
Processing file:  QF_UF_bug-1_ab_cti_max.smt2
Starting consistency test
To check that y$8 and (= y$impl_PC_valid y$prop) are equivalent: They are.
Processing file:  QF_UF_bug-1_ab_reg_max.smt2
Starting consistency test
To check that y$125 and y$374 are equivalent: They are.
Processing file:  QF_UF_cache_coherence_three_ab_cti_max.smt2
Starting consistency test
To check that y$bus_arbiter.bus_ackA and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cache_coherence_three_ab_reg_max.smt2
Starting consistency test
To check that (not (= y$n1s2 y$pcacheB.next_state)) and y$801 are equivalent: They are.
Processing file:  QF_UF_cache_coherence_two_ab_br_max.smt2
Starting consistency test
To check that y$88 and y$290 are equivalent: They are.
Processing file:  QF_UF_cache_coherence_two_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.1.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.1.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_idle_Receiver and (not y$17) are equivalent: They are.
Processing file:  QF_UF_cambridge.2.prop1_ab_fp_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.2.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.2.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.3.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.3.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.4.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.4.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.5.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.5.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.6.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.6.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop1_ab_fp_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop2_ab_fp_max.smt2
Starting consistency test
To check that y$a_E_Receiver and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cambridge.7.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$s$8_op and (not y$34) are equivalent: They are.
Processing file:  QF_UF_cav14_example_v_ab_cti_max.smt2
Starting consistency test
To check that y$2 and (= y$n1s4 y$X) are equivalent: They are.
Processing file:  QF_UF_cav14_example_v_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$37) are equivalent: They are.
Processing file:  QF_UF_collision.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$37) are equivalent: They are.
Processing file:  QF_UF_collision.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$49) are equivalent: They are.
Processing file:  QF_UF_collision.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$61) are equivalent: They are.
Processing file:  QF_UF_collision.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$61) are equivalent: They are.
Processing file:  QF_UF_collision.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$73) are equivalent: They are.
Processing file:  QF_UF_collision.6.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_broadcast and (not y$1) are equivalent: They are.
Processing file:  QF_UF_collision.6.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$18 and (not (= y$n0s4 y$X)) are equivalent: They are.
Processing file:  QF_UF_counter_ab_cti_max.smt2
Starting consistency test
To check that y$18 and (not (= y$n0s4 y$X)) are equivalent: They are.
Processing file:  QF_UF_counter_ab_reg_max.smt2
Starting consistency test
To check that y$16 and (not (= y$n15s4 y$X)) are equivalent: They are.
Processing file:  QF_UF_counter_v_ab_cti_max.smt2
Starting consistency test
To check that y$s$1_op and (Add_4_4_4 y$X y$n1s4) are equivalent: They are.
Processing file:  QF_UF_counter_v_ab_fp_max.smt2
Starting consistency test
To check that y$2 and (= y$n1s4 y$X) are equivalent: They are.
Processing file:  QF_UF_counter_v_ab_reg_max.smt2
Starting consistency test
To check that y$a_finished_customer_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$71) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_finished_customer_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$183) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_finished_customer_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$127) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_finished_customer_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_cyclic_scheduler.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$s$17_op and (not y$49) are equivalent: They are.
Processing file:  QF_UF_diagonal_ab_cti_max.smt2
Starting consistency test
To check that y$2 and (= y$n0s4 y$X) are equivalent: They are.
Processing file:  QF_UF_diagonal_ab_reg_max.smt2
Starting consistency test
To check that y$s$17_op and (not y$49) are equivalent: They are.
Processing file:  QF_UF_diagonal_v_ab_cti_max.smt2
Starting consistency test
To check that y$2 and (= y$n1s4 y$X) are equivalent: They are.
Processing file:  QF_UF_diagonal_v_ab_reg_max.smt2
Starting consistency test
To check that y$a_action_phil_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_driving_phils.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_action_phil_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_driving_phils.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_action_phil_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_driving_phils.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_action_phil_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_driving_phils.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_action_phil_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_driving_phils.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$b0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_dyn_partition_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$25) are equivalent: They are.
Processing file:  QF_UF_elevator.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_choose_next and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$25) are equivalent: They are.
Processing file:  QF_UF_elevator.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_choose_next and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$31) are equivalent: They are.
Processing file:  QF_UF_elevator.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_choose_next and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$37) are equivalent: They are.
Processing file:  QF_UF_elevator.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_choose_next and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$43) are equivalent: They are.
Processing file:  QF_UF_elevator.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_choose_next and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$5) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_done and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$5) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_done and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$5) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_done and (not y$1) are equivalent: They are.
Processing file:  QF_UF_elevator_planning.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$107 and (= y$im.p3_n y$s3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v1_ab_cti_max.smt2
Starting consistency test
To check that y$106 and (= y$im.p3_n y$s3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v2_ab_cti_max.smt2
Starting consistency test
To check that y$im.p1_a and (not y$1) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v2_ab_reg_max.smt2
Starting consistency test
To check that y$107 and (= y$im.p3_n y$s3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v3_ab_cti_max.smt2
Starting consistency test
To check that y$106 and (= y$im.p3_n y$s3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v4_ab_cti_max.smt2
Starting consistency test
To check that y$138 and (Extract_1_0_0_8 y$ra3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v6_ab_cti_max.smt2
Starting consistency test
To check that y$134 and (Extract_1_0_0_8 y$ra3) are equivalent: They are.
Processing file:  QF_UF_eq_sdp_v7_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$27) are equivalent: They are.
Processing file:  QF_UF_exit.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Burian and (not y$1) are equivalent: They are.
Processing file:  QF_UF_exit.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_exit.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Burian_Person_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_exit.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_exit.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$51) are equivalent: They are.
Processing file:  QF_UF_exit.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Burian_Person_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_exit.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$75) are equivalent: They are.
Processing file:  QF_UF_exit.5.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_Burian_Person_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_exit.5.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$a_all_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_extinction.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$85) are equivalent: They are.
Processing file:  QF_UF_extinction.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_all_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_extinction.2.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$113) are equivalent: They are.
Processing file:  QF_UF_extinction.3.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_all_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_extinction.3.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$113) are equivalent: They are.
Processing file:  QF_UF_extinction.4.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_all_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_extinction.4.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$361) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$a_become_child_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop1_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$361) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_become_child_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$361) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_become_child_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.1.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$209) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.2.prop1_ab_cti_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$209) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.2.prop2_ab_cti_max.smt2
Starting consistency test
To check that y$a_become_child_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.2.prop2_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$209) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.2.prop3_ab_cti_max.smt2
Starting consistency test
To check that y$a_become_child_Node_0 and (not y$1) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.2.prop3_ab_reg_max.smt2
Starting consistency test
To check that y$dve_invalid and (not y$361) are equivalent: They are.
Processing file:  QF_UF_firewire_tree.3.prop1_ab_cti_max.smt2
